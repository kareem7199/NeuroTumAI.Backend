<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressRequired" xml:space="preserve">
    <value>Address is required.</value>
  </data>
  <data name="ClinicIdRequired" xml:space="preserve">
    <value>The clinic ID is required.</value>
  </data>
  <data name="CommentLength" xml:space="preserve">
    <value>Comment can't exceed 1000 characters.</value>
  </data>
  <data name="CommentLength1" xml:space="preserve">
    <value>Comment can't exceed 1000 characters.</value>
  </data>
  <data name="CommentRequired" xml:space="preserve">
    <value>Comment is required.</value>
  </data>
  <data name="CommentRequired1" xml:space="preserve">
    <value>Comment is required.</value>
  </data>
  <data name="ContentLength" xml:space="preserve">
    <value>Content must be between 10 and 5000 characters.</value>
  </data>
  <data name="ContentRequired" xml:space="preserve">
    <value>Content is required.</value>
  </data>
  <data name="DateRequired" xml:space="preserve">
    <value>Date is required.</value>
  </data>
  <data name="DayOfWeekRequired" xml:space="preserve">
    <value>The day of the week is required.</value>
  </data>
  <data name="DetectionClass_MinLength" xml:space="preserve">
    <value>Detection class must be at least 1 character long.</value>
  </data>
  <data name="DetectionClass_Required" xml:space="preserve">
    <value>Detection class is required.</value>
  </data>
  <data name="dob_invalid" xml:space="preserve">
    <value>Invalid date format.</value>
  </data>
  <data name="dob_required" xml:space="preserve">
    <value>Date of birth is required.</value>
  </data>
  <data name="DoctorIdRequired" xml:space="preserve">
    <value>Doctor ID is required.</value>
  </data>
  <data name="DoctorIdRequired1" xml:space="preserve">
    <value>Doctor ID is required.</value>
  </data>
  <data name="email_invalid" xml:space="preserve">
    <value>Invalid email format.</value>
  </data>
  <data name="email_required" xml:space="preserve">
    <value>Email is required.</value>
  </data>
  <data name="Findings_MinLength" xml:space="preserve">
    <value>Findings must be at least 1 character long.</value>
  </data>
  <data name="Findings_Required" xml:space="preserve">
    <value>Findings are required.</value>
  </data>
  <data name="fullName_maxLength" xml:space="preserve">
    <value>Full name must not exceed 50 characters.</value>
  </data>
  <data name="fullName_required" xml:space="preserve">
    <value>Full name is required.</value>
  </data>
  <data name="fullName_twoWords" xml:space="preserve">
    <value>Full name must contain only letters and exactly one space between first and last name.</value>
  </data>
  <data name="gender_invalid" xml:space="preserve">
    <value>Gender must be Male or Female.</value>
  </data>
  <data name="gender_required" xml:space="preserve">
    <value>Gender is required.</value>
  </data>
  <data name="latitude_range" xml:space="preserve">
    <value>Latitude must be between -90 and 90.</value>
  </data>
  <data name="LicenseDocumentBackRequired" xml:space="preserve">
    <value>The back license document is required.</value>
  </data>
  <data name="LicenseDocumentFrontRequired" xml:space="preserve">
    <value>The front license document is required.</value>
  </data>
  <data name="LicenseDocumentRequired" xml:space="preserve">
    <value>The license document is required.</value>
  </data>
  <data name="longitude_range" xml:space="preserve">
    <value>Longitude must be between -180 and 180.</value>
  </data>
  <data name="MessageTooLong" xml:space="preserve">
    <value>Message cannot exceed 1000 characters.</value>
  </data>
  <data name="password_complexity" xml:space="preserve">
    <value>Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character.</value>
  </data>
  <data name="password_minLength" xml:space="preserve">
    <value>Password must be at least 6 characters long.</value>
  </data>
  <data name="password_required" xml:space="preserve">
    <value>Password is required.</value>
  </data>
  <data name="PhoneNumberRequired" xml:space="preserve">
    <value>Phone number is required.</value>
  </data>
  <data name="ProfilePictureRequired" xml:space="preserve">
    <value>Profile Picture is required.</value>
  </data>
  <data name="Reasoning_MinLength" xml:space="preserve">
    <value>Reasoning must be at least 1 character long.</value>
  </data>
  <data name="Reasoning_Required" xml:space="preserve">
    <value>Reasoning is required.</value>
  </data>
  <data name="RequiredMessage" xml:space="preserve">
    <value>Please enter your message.</value>
  </data>
  <data name="SlotIdRequired" xml:space="preserve">
    <value>Slot is required.</value>
  </data>
  <data name="StarsRange" xml:space="preserve">
    <value>Stars must be between 1 and 5.</value>
  </data>
  <data name="StarsRange1" xml:space="preserve">
    <value>Stars must be between 1 and 5.</value>
  </data>
  <data name="StarsRequired" xml:space="preserve">
    <value>Stars are required.</value>
  </data>
  <data name="StarsRequired1" xml:space="preserve">
    <value>Stars are required.</value>
  </data>
  <data name="StartTimeRange" xml:space="preserve">
    <value>The start time must be between 00:00 and 23:59.</value>
  </data>
  <data name="StartTimeRequired" xml:space="preserve">
    <value>The start time is required.</value>
  </data>
  <data name="TitleLength" xml:space="preserve">
    <value>Title must be between 3 and 100 characters.</value>
  </data>
  <data name="TitleRequired" xml:space="preserve">
    <value>Title is required.</value>
  </data>
  <data name="TokenInvalid" xml:space="preserve">
    <value>Token must be exactly 6 digits.</value>
  </data>
  <data name="TokenRequired" xml:space="preserve">
    <value>Token is required.</value>
  </data>
  <data name="UniqueEmail" xml:space="preserve">
    <value>This email is already in use.</value>
  </data>
  <data name="UsernameTaken" xml:space="preserve">
    <value>Username is already taken.</value>
  </data>
  <data name="username_maxLength" xml:space="preserve">
    <value>Username must not exceed 20 characters.</value>
  </data>
  <data name="username_minLength" xml:space="preserve">
    <value>Username must be at least 3 characters long.</value>
  </data>
  <data name="username_required" xml:space="preserve">
    <value>Username is required.</value>
  </data>
</root>